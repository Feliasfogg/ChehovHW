#include <iostream>
#include <stdlib.h>
#include <time.h>
#include "search_end_sorting.h"
using namespace std;
int main()
{
    srand(time(NULL));
    const int size=10;
    int array[size];
    int key;
    cout<<"\tнеотсортированный массив\n";
    generate_array(array, size);//генерируем массив, ф-ция возвращает сгенерированный массив
    output_array(array, size);//Передаем сгенерированный массив для вывода в другую функцию
    cout<<"\n\tперетасованный массив"<<endl;
    reshuffle(array, size);//передаем неотсортированной массив перетасовщику и получаем от него перетасованный массив
    output_array(array, size);/*Мы получили перетасованный массив от предыдущей функции
    и уже его снова передаем функции вывода, честно говоря, выглядит дикова-то
     на первый взгляд мы вызываем вывод, потом перетасовщик, а потом опять вывод, а вывод-то рабоатет уже с разными массивами*/
    cout<<"\n\tвведи искомое число, после ввода массив будет перетасован"<<endl;
    cin>>key;//вводим число
    if (linear_search(array, size,key)!=-1)
        /*передаем перетасованный массив и искомое число в функцию поиска и одновременно смотрим что возвращает поисковик
        если функция поиска отрабоатет правильно и найдет искомое число, то она
        вернет номер ячейки этого числа, который конечно же будет отличен от -1, после чего мы запустим функцию сортировки*/
    {
        cout<<"\n\tискокоме число найдено - позиция "<<linear_search(array,size,key)<<endl;
        sorting (array, size, linear_search(array,size,key));
        //для меня довольно извращенно выглядит, я использую возрват от одной функции, как аргумент для передачи другой функции
        cout<<"\tполучившийся массив\n\t(числа до искомого отсортированы по убыванию\n\tчисла после искомого по возрастанию)"<<endl;
        for(int f=0; f<size; ++f)
        {
            cout<<array[f]<<" ";
        }
    }
    else
    {
        //иначе она вернет нам -1 и мы увидим сообщение, что число не найдено
        cout<<"\n\tискомое число не найдено, массив не отсортирован"<<endl;
    }
    return 0;
}

void output_array(int array[], int size)
{
    for(int i=0; i<size; ++i)
    {
        cout<<array[i]<<" ";
    }
}
