#include "header.h"
void shiftRowDown(int **pArr, int **pArr_c, int row, int col, int num, int num_shift)
{
    for(int i=0; i<num_shift; ++i)
    {
        for(int j=0; j<col; ++j)
        {
            pArr_c[num+1][j]=pArr[num+1][j];//переписывание нижней строки в копию матрицы
            pArr[num+1][j]=pArr[num][j];//замещение нижней строки верхней
            pArr[num][j]=pArr_c[num+1][j];//переписывание в верхнюю строку копию нижней
        }
        /*мы проводим итерацию для одной строки, зная ее номер, и следующую итерацию мы проводим для другой строки
        узнавая ее индекс инкрементом к номеру текущей строки, итерации проводим, пока выполняется условие количества сдвигов*/
        ++num;
    }
}
void shiftRowUp(int **pArr, int **pArr_c, int row, int col, int num, int num_shift)
{
    /*num_shift-указывает на сколько строк мы сдвигаемся
    	num - номер первоначально сдвигаемой строки */
    for(int i=0; i<num_shift; ++i)
    {
        for(int j=0; j<col; ++j)
        {
            pArr_c[num-1][j]=pArr[num-1][j];//переписывание верхней строки в копию матрицы
            pArr[num-1][j]=pArr[num][j];//замещение верхней строки содержимым из нижней строки
            pArr[num][j]=pArr_c[num-1][j];//переписывание в нижнюю строку данных из копии
        }
        /*мы проводим итерацию для одной строки, зная ее номер, и следующую итерацию мы проводим для другой строки
        узнавая ее индекс декрементом к номеру текущей строки, итерации проводим, пока выполняется условие количества сдвигов*/
        --num;
    }
}
